WHERE句
　対象行の絞り込みに使う（WHERE句を使用しないと全ての行が捜査対象になってしまう）
　SELECT,UPDATE,DELETE文で使用可能（既存データを操作する文）
　WHEREの後ろには条件式を記述する

条件式
　条件式とは、結果がtrueかfalseになる式のこと
　<>… 左右の値が等しくない

　null… 何もないこと。ゼロや空白文字とも異なる。
　nullを判定するには、= nullなどの演算子を使用できない。SQLの条件式は、TRUE,FALSEの他にUNKNOWN（不明、計算不能）
　という結果を持つ3値論理という仕組みを使っていて、値と値を比較する比較演算子だとNULLはUNKNOWNと判定されてしまうので、比較演算子ではNULLを判定できない。
　また、WHERE句はTRUEとなる行に処理を実行するので、UNKNOWNになる比較演算子ではNULLである行に対して処理を実行できない。

　IS NULL　…　NULLであることを判定する
　IS NOT NULL　…　NULLではないことを判定する


LIKE演算子
　文字列がパターンに合致しているかをチェックすることをパターンマッチングという。SQLではLIKE演算子を使う。
　パターン文字
　　% … 任意の0文字以上の文字列
　　_(アンダースコア） … 任意の1文字

　メモ列に1月という文字が含まれている行を取り出すsql文
  select *
  　from 家計簿
   where メモ like '%1月%'  --1月の前後に任意の0文字以上の文字列がついてもいい

   パターン文字と同じ文字を文字列として扱いたい時はESCAPE句を使用する
   指定した文字をエスケープ文字とし、エスケープ文字の後のパターン文字を文字列として扱う。
   select *
   　from 家計簿
    where メモ like '%10$%' escape '$'  --10%という文字がある行を取り出す


IN/NOT IN演算子
　IN演算子は、カッコ内に列挙した値のいずれかに合致するかを判定する演算子。
　IN (値1,値2,値3,値4)
　
　select *
 　　from 家計簿 
 　　where 費目 in ('食費', '水道光熱費')

 NOT IN演算子は、逆にカッコ内のどれとも合致しないことを判定する演算子

 ANY/ALL 演算子
 直前に比較演算子をつけて利用する
 any カッコ内のいずれかに合致すればtrue
 all カッコ内の全てに合致すればtrue
  select *
 　　from 家計簿 
 　　where 出金額 < any (1000, 3000)


論理演算子
　複数の条件を指定し絞り込む
　and演算子 2つの条件式がtrueの場合にtrue
   WHERE 出金額 < 380 and 費目 = '食費'

　or演算子 2つの条件式のうちどちらかがtrueの場合にtrue
   WHERE 出金額 < 380 or 費目 = '食費'

  not演算子 右辺の真偽値の結果を逆転する
   where not 出金額 = 380 --出金額が380ではない行
